apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  labels:
    apps: grafana
data:
  GF_INSTALL_PLUGINS: grafana-piechart-panel,grafana-clock-panel, redis-datasource,doitintl-bigquery-datasource, grafana-simple-json-datasource,ae3e-plotly-panel,redis-app
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana-pv
  labels:
    type: local
    app: grafana
spec:
  storageClassName: standard
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /mnt/grafana
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pv-claim
  labels:
    apps: grafana
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    apps: grafana
spec:
  type: NodePort
  ports:
    - nodePort: 30081
      targetPort: 3000
      port: 3000
  selector:
    app: grafana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: 'docker.io/bitnami/grafana:8.2.3'
          env:
          - name: GF_SECURITY_ADMIN_PASSWORD 
            value: mypass
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana
          ports:
            - containerPort: 3000
      securityContext:
        fsGroup: 472
        runAsUser: 0
      volumes:
        - name: grafana
          persistentVolumeClaim:
            claimName: grafana-pv-claim
